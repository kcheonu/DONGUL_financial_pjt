# 예시 데이터 (평점 수가 매우 낮은 데이터 포함)
data = [
    {'상품명': '예금 A1', '은행명': '은행1', '금리': 2.0, '평점': 4.2, '평점 수': 30},
    {'상품명': '적금 B1', '은행명': '은행2', '금리': 1.8, '평점': 4.0, '평점 수': 10},
    {'상품명': '예금 C1', '은행명': '은행3', '금리': 2.5, '평점': 4.5, '평점 수': 50},
    {'상품명': '적금 D1', '은행명': '은행4', '금리': 1.6, '평점': 3.8, '평점 수': 8},
    {'상품명': '예금 E1', '은행명': '은행5', '금리': 2.2, '평점': 4.3, '평점 수': 20},
    {'상품명': '예금 F1', '은행명': '은행1', '금리': 2.1, '평점': 3.9, '평점 수': 5},
    {'상품명': '적금 G1', '은행명': '은행2', '금리': 1.9, '평점': 4.6, '평점 수': 12},
    {'상품명': '예금 H1', '은행명': '은행3', '금리': 2.3, '평점': 4.8, '평점 수': 45},
    {'상품명': '적금 I1', '은행명': '은행4', '금리': 1.7, '평점': 4.1, '평점 수': 6},
    {'상품명': '예금 J1', '은행명': '은행5', '금리': 2.4, '평점': 4.9, '평점 수': 15},
    {'상품명': '적금 K1', '은행명': '은행1', '금리': 1.5, '평점': 4.9, '평점 수': 2},
    {'상품명': '예금 L1', '은행명': '은행3', '금리': 2.6, '평점': 4.0, '평점 수': 1},
    {'상품명': '예금 A2', '은행명': '은행1', '금리': 2.8, '평점': 4.5, '평점 수': 28},
    {'상품명': '적금 B2', '은행명': '은행2', '금리': 2.3, '평점': 4.2, '평점 수': 35},
    {'상품명': '예금 C2', '은행명': '은행3', '금리': 2.1, '평점': 3.7, '평점 수': 15},
    {'상품명': '적금 D2', '은행명': '은행4', '금리': 1.9, '평점': 3.6, '평점 수': 18},
    {'상품명': '예금 E2', '은행명': '은행5', '금리': 2.0, '평점': 4.1, '평점 수': 25},
    {'상품명': '적금 F2', '은행명': '은행1', '금리': 2.2, '평점': 3.9, '평점 수': 40},
    {'상품명': '예금 G2', '은행명': '은행2', '금리': 2.5, '평점': 4.3, '평점 수': 30},
    {'상품명': '적금 H2', '은행명': '은행3', '금리': 2.4, '평점': 4.7, '평점 수': 42},
    {'상품명': '예금 I2', '은행명': '은행4', '금리': 2.7, '평점': 4.4, '평점 수': 23},
    {'상품명': '적금 J2', '은행명': '은행5', '금리': 1.6, '평점': 3.5, '평점 수': 12},
    {'상품명': '예금 K2', '은행명': '은행1', '금리': 2.2, '평점': 4.2, '평점 수': 8},
    {'상품명': '적금 L2', '은행명': '은행2', '금리': 1.8, '평점': 3.8, '평점 수': 9},
    {'상품명': '예금 A3', '은행명': '은행1', '금리': 3.0, '평점': 4.6, '평점 수': 20},
    {'상품명': '적금 B3', '은행명': '은행2', '금리': 2.8, '평점': 4.5, '평점 수': 15},
    {'상품명': '예금 C3', '은행명': '은행3', '금리': 2.3, '평점': 4.7, '평점 수': 11},
    {'상품명': '적금 D3', '은행명': '은행4', '금리': 2.9, '평점': 4.4, '평점 수': 22},
    {'상품명': '예금 E3', '은행명': '은행5', '금리': 2.5, '평점': 4.9, '평점 수': 13},
    {'상품명': '적금 F3', '은행명': '은행1', '금리': 2.6, '평점': 4.6, '평점 수': 19},
    {'상품명': '예금 G3', '은행명': '은행2', '금리': 3.1, '평점': 4.7, '평점 수': 18},
    {'상품명': '적금 H3', '은행명': '은행3', '금리': 3.0, '평점': 4.5, '평점 수': 23},
    {'상품명': '예금 I3', '은행명': '은행4', '금리': 2.3, '평점': 4.3, '평점 수': 7},
    {'상품명': '적금 J3', '은행명': '은행5', '금리': 2.4, '평점': 4.2, '평점 수': 5},
    {'상품명': '예금 K3', '은행명': '은행1', '금리': 2.1, '평점': 3.9, '평점 수': 14},
    {'상품명': '적금 L3', '은행명': '은행2', '금리': 1.9, '평점': 4.1, '평점 수': 2},
    {'상품명': '예금 A4', '은행명': '은행1', '금리': 2.5, '평점': 4.4, '평점 수': 3},
    {'상품명': '적금 B4', '은행명': '은행2', '금리': 2.0, '평점': 4.0, '평점 수': 26},
    {'상품명': '예금 C4', '은행명': '은행3', '금리': 2.8, '평점': 4.1, '평점 수': 38},
    {'상품명': '적금 D4', '은행명': '은행4', '금리': 2.2, '평점': 3.9, '평점 수': 12},
    {'상품명': '예금 E4', '은행명': '은행5', '금리': 2.6, '평점': 4.8, '평점 수': 44},
    {'상품명': '적금 F4', '은행명': '은행1', '금리': 2.3, '평점': 3.5, '평점 수': 8},
    {'상품명': '예금 G4', '은행명': '은행2', '금리': 3.3, '평점': 4.9, '평점 수': 31},
    {'상품명': '적금 H4', '은행명': '은행3', '금리': 2.4, '평점': 4.2, '평점 수': 19},
    {'상품명': '예금 I4', '은행명': '은행4', '금리': 2.7, '평점': 4.6, '평점 수': 50},
    {'상품명': '적금 J4', '은행명': '은행5', '금리': 1.5, '평점': 3.7, '평점 수': 6},
    {'상품명': '예금 K4', '은행명': '은행1', '금리': 3.0, '평점': 4.5, '평점 수': 29},
    {'상품명': '적금 L4', '은행명': '은행2', '금리': 1.8, '평점': 3.9, '평점 수': 10},
    {'상품명': '예금 A5', '은행명': '은행1', '금리': 3.2, '평점': 4.8, '평점 수': 42},
    {'상품명': '적금 B5', '은행명': '은행2', '금리': 2.7, '평점': 4.1, '평점 수': 17},
    {'상품명': '예금 C5', '은행명': '은행3', '금리': 3.1, '평점': 4.4, '평점 수': 9},
    {'상품명': '적금 D5', '은행명': '은행4', '금리': 2.0, '평점': 3.6, '평점 수': 14}
]

# 가중치 및 추천 알고리즘
def calculate_weighted_score(interest_rate, rating, rating_count, min_rating_count=5):
    # 평점 수가 min_rating_count 이하일 경우, 가중치를 낮게 부여
    if rating_count <= min_rating_count:
        weight = 0.5  # 평점 수가 적으면 가중치를 낮게 설정하여 신뢰도가 낮다고 간주
    else:
        weight = min(1, 0.5 + (rating_count / 50))  # 평점 수가 50개 이상일 때 최대 가중치 1

    # 종합 점수 = 금리 + (평점 * 가중치)
    weighted_score = interest_rate + (rating * weight)  # 금리와 가중치를 적용한 평점 종합 점수
    return weighted_score

def recommend_products(data, preferred_banks, min_interest_rate=0.0, top_n=5):
    recommended_products = []
    for product in data:
        if product['은행명'] in preferred_banks and product['금리'] >= min_interest_rate:
            weighted_score = calculate_weighted_score(
                product['금리'],
                product['평점'],
                product['평점 수']
            )
            product['종합 점수'] = weighted_score
            recommended_products.append(product)
    
    # 종합 점수 기준으로 정렬하여 상위 top_n개의 상품을 추천
    sorted_products = sorted(recommended_products, key=lambda x: x['종합 점수'], reverse=True)
    return sorted_products[:top_n]

# 사용자 선호 은행과 설정된 최소 금리
preferred_banks = ['은행1', '은행2']
recommended = recommend_products(data, preferred_banks, min_interest_rate=1.8, top_n=5)

# 추천 결과 출력
for product in recommended:
    print(f"상품명: {product['상품명']}, 은행명: {product['은행명']}, 금리: {product['금리']}%, 평점: {product['평점']} ({product['평점 수']}명), 종합 점수: {product['종합 점수']:.2f}")



# 평점보다는 금리가 더 중요하지 않을까?
# 주거래 은행이 더 선호되니까 점수를 더 줘야되지않을까?
# 은행의 점포수가 중요하지 않을까? 사용자의 은행접근방식에 대한 차이.....
# 예금이나 적금 기간에 따른 우대 금리로 인해 금리 변동사항이 크다면 먼저 저축기간에 대한 조사가 필요
# 저축금액에 대한 상한선이 존재한다면 어떤 상품을 추천해줘야 할까?
# 저축기간에 따른 우대금리를 적용해 줬을 때, 해당 기간동안 금리를 제일 높게 받을 수있는 상품을 추천해줘야한다.
# 위 해당 사항에 따른 추가 정보를 사용자가 입력, 제공할 수 있도록 하는 폼이 필요하다.
# # 현재 개인 맞춤형 금융상품 추천해주는 방식에는 어떤 것들이 있을까?